#include <Windows.h>
// shader.h
// This file includes the generated binary for each shader function in shader.hlsl
// For source code see shader.hlsl

#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.18611
//
//
// Buffer Definitions:
//
// cbuffer cbPerObject
// {
//
//   float4x4 gcWVP;                    // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbPerObject                       cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
//
vs_4_0
dcl_constantbuffer cb0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 2
dp4 r0.x, v0.xyzw, cb0[0].xyzw
dp4 r0.y, v0.xyzw, cb0[1].xyzw
dp4 r0.z, v0.xyzw, cb0[2].xyzw
dp4 r0.w, v0.xyzw, cb0[3].xyzw
mov r1.xy, v1.xyxx
mov o0.xyzw, r0.xyzw
mov o1.xy, r1.xyxx
ret
// Approximately 8 instruction slots used
#endif

const BYTE g_VS_Start[] =
{
	68,  88,  66,  67,  83,  12,
	201,  76, 199, 249, 137, 226,
	56,  31, 181, 218,  32,  48,
	245, 126,   1,   0,   0,   0,
	68,   3,   0,   0,   5,   0,
	0,   0,  52,   0,   0,   0,
	0,   1,   0,   0,  84,   1,
	0,   0, 172,   1,   0,   0,
	200,   2,   0,   0,  82,  68,
	69,  70, 196,   0,   0,   0,
	1,   0,   0,   0,  72,   0,
	0,   0,   1,   0,   0,   0,
	28,   0,   0,   0,   0,   4,
	254, 255,   4,   1,   0,   0,
	144,   0,   0,   0,  60,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   1,   0,
	0,   0,   0,   0,   0,   0,
	99,  98,  80, 101, 114,  79,
	98, 106, 101,  99, 116,   0,
	60,   0,   0,   0,   1,   0,
	0,   0,  96,   0,   0,   0,
	64,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	120,   0,   0,   0,   0,   0,
	0,   0,  64,   0,   0,   0,
	2,   0,   0,   0, 128,   0,
	0,   0,   0,   0,   0,   0,
	103,  99,  87,  86,  80,   0,
	171, 171,   3,   0,   3,   0,
	4,   0,   4,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	77, 105,  99, 114, 111, 115,
	111, 102, 116,  32,  40,  82,
	41,  32,  72,  76,  83,  76,
	32,  83, 104,  97, 100, 101,
	114,  32,  67, 111, 109, 112,
	105, 108, 101, 114,  32,  54,
	46,  51,  46,  57,  54,  48,
	48,  46,  49,  56,  54,  49,
	49,   0, 171, 171,  73,  83,
	71,  78,  76,   0,   0,   0,
	2,   0,   0,   0,   8,   0,
	0,   0,  56,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   3,   0,   0,   0,
	0,   0,   0,   0,  15,  15,
	0,   0,  65,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   3,   0,   0,   0,
	1,   0,   0,   0,   3,   3,
	0,   0,  80,  79,  83,  73,
	84,  73,  79,  78,   0,  84,
	69,  88,  67,  79,  79,  82,
	68,   0, 171, 171,  79,  83,
	71,  78,  80,   0,   0,   0,
	2,   0,   0,   0,   8,   0,
	0,   0,  56,   0,   0,   0,
	0,   0,   0,   0,   1,   0,
	0,   0,   3,   0,   0,   0,
	0,   0,   0,   0,  15,   0,
	0,   0,  68,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   3,   0,   0,   0,
	1,   0,   0,   0,   3,  12,
	0,   0,  83,  86,  95,  80,
	79,  83,  73,  84,  73,  79,
	78,   0,  84,  69,  88,  67,
	79,  79,  82,  68,   0, 171,
	171, 171,  83,  72,  68,  82,
	20,   1,   0,   0,  64,   0,
	1,   0,  69,   0,   0,   0,
	89,   0,   0,   4,  70, 142,
	32,   0,   0,   0,   0,   0,
	4,   0,   0,   0,  95,   0,
	0,   3, 242,  16,  16,   0,
	0,   0,   0,   0,  95,   0,
	0,   3,  50,  16,  16,   0,
	1,   0,   0,   0, 103,   0,
	0,   4, 242,  32,  16,   0,
	0,   0,   0,   0,   1,   0,
	0,   0, 101,   0,   0,   3,
	50,  32,  16,   0,   1,   0,
	0,   0, 104,   0,   0,   2,
	2,   0,   0,   0,  17,   0,
	0,   8,  18,   0,  16,   0,
	0,   0,   0,   0,  70,  30,
	16,   0,   0,   0,   0,   0,
	70, 142,  32,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	17,   0,   0,   8,  34,   0,
	16,   0,   0,   0,   0,   0,
	70,  30,  16,   0,   0,   0,
	0,   0,  70, 142,  32,   0,
	0,   0,   0,   0,   1,   0,
	0,   0,  17,   0,   0,   8,
	66,   0,  16,   0,   0,   0,
	0,   0,  70,  30,  16,   0,
	0,   0,   0,   0,  70, 142,
	32,   0,   0,   0,   0,   0,
	2,   0,   0,   0,  17,   0,
	0,   8, 130,   0,  16,   0,
	0,   0,   0,   0,  70,  30,
	16,   0,   0,   0,   0,   0,
	70, 142,  32,   0,   0,   0,
	0,   0,   3,   0,   0,   0,
	54,   0,   0,   5,  50,   0,
	16,   0,   1,   0,   0,   0,
	70,  16,  16,   0,   1,   0,
	0,   0,  54,   0,   0,   5,
	242,  32,  16,   0,   0,   0,
	0,   0,  70,  14,  16,   0,
	0,   0,   0,   0,  54,   0,
	0,   5,  50,  32,  16,   0,
	1,   0,   0,   0,  70,   0,
	16,   0,   1,   0,   0,   0,
	62,   0,   0,   1,  83,  84,
	65,  84, 116,   0,   0,   0,
	8,   0,   0,   0,   2,   0,
	0,   0,   0,   0,   0,   0,
	4,   0,   0,   0,   4,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   1,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   3,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0
};

#if 0
//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.18611
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// gSamplerState                     sampler      NA          NA    0        1
// gTexture                          texture  float4          2d    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_sampler s0, mode_default
dcl_resource_texture2d(float, float, float, float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
sample o0.xyzw, v1.xyxx, t0.xyzw, s0
ret
// Approximately 2 instruction slots used
#endif

const BYTE g_PS_Start[] =
{
	68,  88,  66,  67, 115, 235,
	21, 136,  89, 165,  89,  89,
	61,  45,  67,   9, 123,  55,
	123, 218,   1,   0,   0,   0,
	88,   2,   0,   0,   5,   0,
	0,   0,  52,   0,   0,   0,
	228,   0,   0,   0,  60,   1,
	0,   0, 112,   1,   0,   0,
	220,   1,   0,   0,  82,  68,
	69,  70, 168,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   2,   0,   0,   0,
	28,   0,   0,   0,   0,   4,
	255, 255,   4,   1,   0,   0,
	115,   0,   0,   0,  92,   0,
	0,   0,   3,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   1,   0,
	0,   0,   0,   0,   0,   0,
	106,   0,   0,   0,   2,   0,
	0,   0,   5,   0,   0,   0,
	4,   0,   0,   0, 255, 255,
	255, 255,   0,   0,   0,   0,
	1,   0,   0,   0,  12,   0,
	0,   0, 103,  83,  97, 109,
	112, 108, 101, 114,  83, 116,
	97, 116, 101,   0, 103,  84,
	101, 120, 116, 117, 114, 101,
	0,  77, 105,  99, 114, 111,
	115, 111, 102, 116,  32,  40,
	82,  41,  32,  72,  76,  83,
	76,  32,  83, 104,  97, 100,
	101, 114,  32,  67, 111, 109,
	112, 105, 108, 101, 114,  32,
	54,  46,  51,  46,  57,  54,
	48,  48,  46,  49,  56,  54,
	49,  49,   0, 171, 171, 171,
	73,  83,  71,  78,  80,   0,
	0,   0,   2,   0,   0,   0,
	8,   0,   0,   0,  56,   0,
	0,   0,   0,   0,   0,   0,
	1,   0,   0,   0,   3,   0,
	0,   0,   0,   0,   0,   0,
	15,   0,   0,   0,  68,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   3,   0,
	0,   0,   1,   0,   0,   0,
	3,   3,   0,   0,  83,  86,
	95,  80,  79,  83,  73,  84,
	73,  79,  78,   0,  84,  69,
	88,  67,  79,  79,  82,  68,
	0, 171, 171, 171,  79,  83,
	71,  78,  44,   0,   0,   0,
	1,   0,   0,   0,   8,   0,
	0,   0,  32,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   3,   0,   0,   0,
	0,   0,   0,   0,  15,   0,
	0,   0,  83,  86,  95,  84,
	65,  82,  71,  69,  84,   0,
	171, 171,  83,  72,  68,  82,
	100,   0,   0,   0,  64,   0,
	0,   0,  25,   0,   0,   0,
	90,   0,   0,   3,   0,  96,
	16,   0,   0,   0,   0,   0,
	88,  24,   0,   4,   0, 112,
	16,   0,   0,   0,   0,   0,
	85,  85,   0,   0,  98,  16,
	0,   3,  50,  16,  16,   0,
	1,   0,   0,   0, 101,   0,
	0,   3, 242,  32,  16,   0,
	0,   0,   0,   0,  69,   0,
	0,   9, 242,  32,  16,   0,
	0,   0,   0,   0,  70,  16,
	16,   0,   1,   0,   0,   0,
	70, 126,  16,   0,   0,   0,
	0,   0,   0,  96,  16,   0,
	0,   0,   0,   0,  62,   0,
	0,   1,  83,  84,  65,  84,
	116,   0,   0,   0,   2,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   2,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   1,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	1,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0,
	0,   0,   0,   0,   0,   0
};